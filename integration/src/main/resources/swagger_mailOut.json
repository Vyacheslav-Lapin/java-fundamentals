{
  "swagger": "2.0",
  "info": {
    "version": "v1/v2",
    "title": "Hermes API",
    "description": "Сервис HERMES",
    "termsOfService": "None",
    "contact": {
      "name": "Andrey Kudashkin, Sergey Zhogin",
      "email": "akudashkin@luxoft.com, SZhogin@luxoft.com"
    },
    "license": {
      "name": "(c) Russian Post",
      "url": "http://russianpost.ru"
    }
  },
    "paths": {
    "/api/v2/procurations/{hid}": {
      "get": {
        "tags": [
          "ClientProcuration"
        ],
        "summary": "Получение доверенности для пользователя",
        "operationId": "GetProcurationByHid",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "hid",
            "in": "path",
            "description": "hid пользователя",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Procuration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/DataValidation/validate": {
      "post": {
        "tags": [
          "DataValidation"
        ],
        "summary": "Провалидировать данные",
        "operationId": "Validate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "validationData",
            "in": "body",
            "description": "Данные для валидации",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidationDataDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ValidationStatus"
            }
          }
        }
      }
    },
    "/api/DataValidation/cleanaddress": {
      "post": {
        "tags": [
          "DataValidation"
        ],
        "summary": "Распознание и очистка адреса",
        "operationId": "CleanAddress",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressToCleanDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        }
      }
    },
    "/api/Docs/download-docs/{fileName}": {
      "get": {
        "tags": [
          "Docs"
        ],
        "summary": "Метод для скачивания файлов pdf",
        "operationId": "DownloadDocsByName",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "Имя файла",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/EasSyncReport/nonsync/xlsx": {
      "get": {
        "tags": [
          "EasSyncReport"
        ],
        "summary": "Возвращает отчет в формате EXCEL по РПО, которые не удалось синхронизировать с ЕАС",
        "operationId": "GetNonSyncedShipmentReport",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "opsFilter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "offsetUtcMin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FormF22": {
      "post": {
        "tags": [
          "FormF22"
        ],
        "summary": "Сформировать ссылку на PDF файл формы F22",
        "operationId": "CreatePdfLink",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/F22Dto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/FormF22/{id}/pdf": {
      "get": {
        "tags": [
          "FormF22"
        ],
        "summary": "Сформировать данные для печати Ф22",
        "operationId": "CreateF22",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/FormF22/{id}/common": {
      "get": {
        "tags": [
          "FormF22"
        ],
        "summary": "Сформировать данные для печати 'Общей формы Ф22'",
        "operationId": "CreateF22CommonForm",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентфикатор формы Ф22",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "timezoneOffsetMin",
            "in": "query",
            "description": "Смещение часового пояса относительно UTC в минутах",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/MailOut": {
      "post": {
        "tags": [
          "MailOut"
        ],
        "summary": "Создание заказа на выдачу РПО",
        "operationId": "MakeMailOutOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OldMakeMailOutOrderDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/v3/mailout": {
      "post": {
        "tags": [
          "MailOut"
        ],
        "summary": "Создает заказ на вручение РПО",
        "operationId": "MakeMailOutOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Данные заказа",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MakeMailOutOrderDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MailOutOrderCreateResult"
            }
          }
        }
      }
    },
    "/api/v3/opses/{ops}/mailout/payments/{paymentId}/confirm": {
      "put": {
        "tags": [
          "MailOut"
        ],
        "summary": "Отмечает платеж оплаченным",
        "operationId": "ConfirmPaymentAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ops",
            "in": "path",
            "description": "ОПС",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Id платежа",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "info",
            "in": "body",
            "description": "Данные с информацией об оплате платежа",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DevicesServiceOrderPaymentInfoDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v2/MailOut": {
      "post": {
        "tags": [
          "MailOut"
        ],
        "summary": "Создает заказ на вручение РПО",
        "operationId": "MakeMailOutOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MakeMailOutOrderDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/MailOut/cleanup-last-names": {
      "post": {
        "tags": [
          "MailOut"
        ],
        "summary": "Получить фамилии получателей РПО в именительном и дательном падежах",
        "operationId": "GetLastNamesInSubjectiveAndDativeCase",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "lastNamesWithIds",
            "in": "body",
            "description": "ДТО с фамилиями получателей и соотв. им ШПИ РПО",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RpoInfo"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/MailOutJobs/shedule-imrs-job-for-range": {
      "post": {
        "tags": [
          "MailOutJobs"
        ],
        "summary": "Ставит в очередь задачу для отправки данных о выданных отправлениях в СРВО",
        "operationId": "SheduleImrsJobForRange",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "idFrom",
            "in": "query",
            "description": "Идентификатор элемента заказа на выдачу с",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "idTo",
            "in": "query",
            "description": "Идентификатор элемента заказа на выдачу по",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/MailOutJobs/shedule-kafka-job-for-range": {
      "post": {
        "tags": [
          "MailOutJobs"
        ],
        "summary": "Ставит в очередь задачу для отправки данных о выданных отправлениях в КШД",
        "operationId": "SheduleKafkaJobForRange",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "idFrom",
            "in": "query",
            "description": "Идентификатор элемента заказа на выдачу с",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "idTo",
            "in": "query",
            "description": "Идентификатор элемента заказа на выдачу по",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/opses/{ops}/mailout/payment/create-payments/plugin": {
      "post": {
        "tags": [
          "MailOutPayment"
        ],
        "summary": "Создает платежи, считаем, что всегда производим оформление заказа из одной системы см. SourceSystems",
        "operationId": "CreatePaymentsPluginAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ops",
            "in": "path",
            "description": "Индекс ОПС",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Заказ, который необходимо оплатить",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MakeMailOutOrderDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/opses/{ops}/mailout/payment/{paymentId}/confirm-payment/plugin": {
      "put": {
        "tags": [
          "MailOutPayment"
        ],
        "summary": "Отмечает платеж оплаченным",
        "operationId": "ConfirmPaymentPluginAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ops",
            "in": "path",
            "description": "Номер ОПС",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Id платежа",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "info",
            "in": "body",
            "description": "Данные с информацией об оплате платежа из плагина ЕАС",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MailOutPaymentConfirmationInfoDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/opses/{ops}/mailout/payment/{paymentId}/cancel-payment/plugin": {
      "put": {
        "tags": [
          "MailOutPayment"
        ],
        "summary": "Отменяет проведение платежа для выдачи РПО",
        "operationId": "CancelPaymentPluginAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ops",
            "in": "path",
            "description": "Номер ОПС",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Id платежа",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "info",
            "in": "body",
            "description": "Информация для отмены платежа",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MailOutPaymentCancellationInfoDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v2/MailOutReport/delivered": {
      "get": {
        "tags": [
          "MailOutReport"
        ],
        "summary": "Формирует данные для отчета по выданным РПО по указанному отделению",
        "operationId": "GetDeliveredRposReport",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Дата с",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Дата по",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "isXlsx",
            "in": "query",
            "description": "Признак того, что нужно сформировать XLSX файл",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "opsZipCode",
            "in": "query",
            "description": "Индекс ОПС",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezoneOffset",
            "in": "query",
            "description": "Смещение часового пояса относительно UTC",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryCategoryRpo",
            "in": "query",
            "description": "Способ вручения РПО",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/stat/mailout/xlsx": {
      "get": {
        "tags": [
          "MailOutStatReport"
        ],
        "summary": "Сгенерировать статистический отчет по выданным в формате xlsx",
        "operationId": "GetStatReport",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "macroregionId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "regionId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "includePostOffices",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeWeeks",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "timeZoneOffset",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/MailOutSyncWithEas/{postOfficeZipCode}/orders": {
      "get": {
        "tags": [
          "MailOutSyncWithEas"
        ],
        "summary": "Метод получения опций синхронизации (пока только флаг вкл/выкл) и РПО для синхронизации",
        "operationId": "GetOrdersForSync",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "postOfficeZipCode",
            "in": "path",
            "description": "Индекс опс",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/MailOutSyncWithEas/synced-orders": {
      "put": {
        "tags": [
          "MailOutSyncWithEas"
        ],
        "summary": "Метод установки информации о синхронизации РПО с ЕАС",
        "operationId": "SetSyncFlagsForOrders",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "syncInfo",
            "in": "body",
            "description": "ДТО с информацией о синхронизации",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentsSyncInfoDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/ozk/client-info": {
      "get": {
        "tags": [
          "Ozk"
        ],
        "summary": "Получает информацию о клиенте (его ДУЛ - документ удостоверения личности) по ШПИ (например клиент, оплативший таможенный платеж)\r\nОжидается, что метод используется клиентом сервиса для получения информации о клиенте, оплатившем ТП по УО вне ANM.",
        "operationId": "GetOzkClientInfoByShipmentId",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "shipment-id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OzkClientInfoDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/PostId/person": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Поиск клиента по одному из параметров набора RussianPost.ANM.PostIdClient.Models.RetrieveParameters",
        "operationId": "SearchSingle",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "by",
            "in": "query",
            "description": "Тип параметра",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              4,
              8
            ]
          },
          {
            "name": "parameter",
            "in": "query",
            "description": "Значение параметра. Должно соответствовать требуемой спецификации для указанного типа.",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "description": "Тип аккаунта клиента",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "PostId"
        ],
        "summary": "Добавление физического лица и его предварительное сохранение на сервисе без сохранения в Почта.ID",
        "operationId": "CreatePerson",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "description": "Данные",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/PostId/persons": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Поиск клиента по одному из параметров набора RussianPost.ANM.PostIdClient.Models.RetrieveParameters",
        "operationId": "SearchMany",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "by",
            "in": "query",
            "description": "Тип параметра",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              4,
              8
            ]
          },
          {
            "name": "parameter",
            "in": "query",
            "description": "Значение параметра. Должно соответствовать требуемой спецификации для указанного типа.",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "description": "Тип аккаунта клиента",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/PostId/person/{passport}/{phone}": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Поиск клиента по двум параметрам: паспорту и телефону RussianPost.ANM.PostIdClient.Models.RetrieveParameters",
        "operationId": "SearchPersonByFilter",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "passport",
            "in": "path",
            "description": "паспорт",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "path",
            "description": "телефон",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/PostId/confirmperson/{id}": {
      "post": {
        "tags": [
          "PostId"
        ],
        "summary": "Заводит анкету физического лица в ПочтаИД",
        "operationId": "ConfirmCreatePerson",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id созданного ранее временного объекта",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/PostId/anketa/{id}": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Получить сформированный файл для анкеты пользователя",
        "operationId": "Anketa",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id созданного ранее временного объекта",
            "required": true,
            "type": "string"
          },
          {
            "name": "operatorLogin",
            "in": "query",
            "description": "Логин оператора",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/v2/PostId/person": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Поиск клиента по одному из параметров набора RussianPost.ANM.PostIdClient.Models.RetrieveParameters",
        "operationId": "SearchSingle",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "by",
            "in": "query",
            "description": "Тип параметра",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              4,
              8
            ]
          },
          {
            "name": "parameter",
            "in": "query",
            "description": "Значение параметра. Должно соответствовать требуемой спецификации для указанного типа.",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "description": "Тип аккаунта клиента",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PostIdProfile"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/BussinessError"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "PostId"
        ],
        "summary": "Создание/обновление анкеты в ПочтаИд",
        "operationId": "ImportPerson",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "description": "Данные",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v2/PostId/persons": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Поиск клиента по одному из параметров набора RussianPost.ANM.PostIdClient.Models.RetrieveParameters",
        "operationId": "SearchMany",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "by",
            "in": "query",
            "description": "Тип параметра",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              4,
              8
            ]
          },
          {
            "name": "parameter",
            "in": "query",
            "description": "Значение параметра. Должно соответствовать требуемой спецификации для указанного типа.",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "description": "Тип аккаунта клиента",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PostIdProfile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v2/PostId/person/{passport}/{phone}": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Поиск клиента по двум параметрам: паспорту и телефону RussianPost.ANM.PostIdClient.Models.RetrieveParameters",
        "operationId": "SearchPersonByFilter",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "passport",
            "in": "path",
            "description": "паспорт",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "path",
            "description": "телефон",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PostIdProfile"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v2/PostId/person/check-if-exist": {
      "get": {
        "tags": [
          "PostId"
        ],
        "summary": "Проверка на существование клиента в сис-ме Почта ИД",
        "operationId": "CheckIfPersonExists",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "parameter_type",
            "in": "query",
            "description": "Тип параметра по которому осуществляется поиск",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              4,
              8
            ]
          },
          {
            "name": "parameter_value",
            "in": "query",
            "description": "Значение параметра по которому осуществляется поиск",
            "required": false,
            "type": "string"
          },
          {
            "name": "account_type",
            "in": "query",
            "description": "Тип аккаунтов в сис-ме Почта Ид среди которых производится поиск",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsPersonExists"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v2/PostId/service/connect": {
      "post": {
        "tags": [
          "PostId"
        ],
        "summary": "Подключение услуги",
        "operationId": "ConnectService",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UnConnectServiceRequestDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/BusinessErrorDto"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v2/PostId/service/unconnect": {
      "post": {
        "tags": [
          "PostId"
        ],
        "summary": "Отключение услуги",
        "operationId": "UnConnectService",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UnConnectServiceRequestDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/BusinessErrorDto"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/PostIdAuthentication/request": {
      "post": {
        "tags": [
          "PostIdAuthentication"
        ],
        "summary": "Отправляет SMS с кодом подтверждения пользователю, чей Hid указан в запросе",
        "operationId": "RequestAuthentication",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Параметры для запроса в ПочтаИД",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAuthenticationDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RequestAuthenticationResultDto"
            }
          }
        }
      }
    },
    "/api/PostIdAuthentication/check": {
      "post": {
        "tags": [
          "PostIdAuthentication"
        ],
        "summary": "Проверка кода аутентификации",
        "operationId": "RequestCheck",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Параметры для запроса в ПочтаИД",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCheckDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RequestCheckResponseDto"
            }
          }
        }
      }
    },
    "/api/PostIdAuthentication/status/{authenticationId}": {
      "get": {
        "tags": [
          "PostIdAuthentication"
        ],
        "summary": "Проверка статуса сессии аутентификации",
        "operationId": "RequestStatus",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "authenticationId",
            "in": "path",
            "description": "Идентификатор запроса аутентификации",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RequestStatusResponseDto"
            }
          }
        }
      }
    },
    "/api/v1/PostIdAuthenticationLogReport": {
      "get": {
        "tags": [
          "PostIdAuthenticationLogReport"
        ],
        "summary": "Формирует отчет об использовании ПЭП по указанным критериям",
        "operationId": "GetReport",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "Phones",
            "in": "query",
            "description": "Телефоны",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "Passports",
            "in": "query",
            "description": "Паспорта",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "PostBankCards",
            "in": "query",
            "description": "Номера карт ПочтаБанка",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "PostOfficeZipCodes",
            "in": "query",
            "description": "Индексы ОПС",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "ShipmentIds",
            "in": "query",
            "description": "ШПИ отправлений",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата с",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата по",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "IsNotSuccessOnly",
            "in": "query",
            "description": "Только неуспешные запросы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Номер страницы данных",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Размер страницы данных",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PostIdReports/RegisteredClientsWithPep": {
      "get": {
        "tags": [
          "PostIdReports"
        ],
        "summary": "Генерирует отчет в формате файла Excel по новым зарегистрированным клиентам в ПочтаИД с ПЭП",
        "operationId": "BuildRegisteredClientsWithPepReport",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала периода",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата окончания периода",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "PostOfficeZipCodes",
            "in": "query",
            "description": "Фильтр индексов ОПС",
            "required": true,
            "type": "string"
          },
          {
            "name": "TimeOffsetMin",
            "in": "query",
            "description": "Смещение времени клиента в минутах относительно UTC",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v2/mailout/ecom-invoice": {
      "post": {
        "tags": [
          "PrintEcomInvoice"
        ],
        "summary": "Сохранить данные для печатной формы квитанции ЕКОМ",
        "operationId": "SaveData",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные квитанции",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EcomInvoiceIncomDataDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "При наличии результатов",
            "schema": {
              "type": "string"
            }
          },
          "409": {
            "description": "При бизнес-ошибке",
            "schema": {
              "$ref": "#/definitions/BusinessErrorDto"
            }
          },
          "500": {
            "description": "При внутренней ошибке сервера"
          }
        }
      }
    },
    "/api/v1/mailout/ecom-invoice": {
      "post": {
        "tags": [
          "PrintEcomInvoice"
        ],
        "summary": "Сохранить данные для печатной формы квитанции ЕКОМ",
        "operationId": "SaveData",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные квитанции",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EcomInvoiceIncomDataDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "При наличии результатов",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "При некорректном запросе",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "При внутренней ошибке сервера"
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/mailout/ecom-invoice/{id}": {
      "get": {
        "tags": [
          "PrintEcomInvoice"
        ],
        "summary": "Получить данные для печатной формы ЕКОМ",
        "operationId": "GetData",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор формы",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrintEcomInvoiceForm"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/mailout/ecom_marketplace_receipt": {
      "post": {
        "tags": [
          "PrintEcomMarketplaceReceipt"
        ],
        "summary": "Сохранить данные для печатной формы квитанции ЕКОМ Marketplace",
        "operationId": "SaveData",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные квитанции",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EcomMarketplaceReceiptDataDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "При наличии результатов",
            "schema": {
              "type": "string"
            }
          },
          "409": {
            "description": "При бизнес-ошибке",
            "schema": {
              "$ref": "#/definitions/BusinessErrorDto"
            }
          },
          "500": {
            "description": "При внутренней ошибке сервера"
          }
        }
      }
    },
    "/api/v1/mailout/ecom_marketplace_receipt/{id}": {
      "get": {
        "tags": [
          "PrintEcomMarketplaceReceipt"
        ],
        "summary": "Получить данные для печатной формы ЕКОМ Marketplace",
        "operationId": "GetData",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор формы",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrintEcomMarketplaceReceiptForm"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/mailout/printform/type/{type}/data": {
      "get": {
        "tags": [
          "PrintForm"
        ],
        "summary": "Получить данные для формирования пустой печатной формы",
        "operationId": "GetDataEmpty",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Тип формы",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1001,
              1002,
              1003,
              1004
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "При наличии результатов",
            "schema": {
              "$ref": "#/definitions/PrintFormReportDataDto"
            }
          },
          "400": {
            "description": "При некорректном запросе",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "500": {
            "description": "При внутренней ошибке сервера"
          }
        }
      },
      "post": {
        "tags": [
          "PrintForm"
        ],
        "summary": "Сохранить данные для печатной формы",
        "operationId": "SaveData",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Тип формы",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1001,
              1002,
              1003,
              1004
            ]
          },
          {
            "name": "data",
            "in": "body",
            "description": "Данные формы",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrintFormDataDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "При наличии результатов",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "При некорректном запросе",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "500": {
            "description": "При внутренней ошибке сервера"
          }
        }
      }
    },
    "/api/v1/mailout/printform/type/{type}/data/{id}": {
      "get": {
        "tags": [
          "PrintForm"
        ],
        "summary": "Получить данные для формирования печатной формы",
        "operationId": "GetData",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Тип формы",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1001,
              1002,
              1003,
              1004
            ]
          },
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор данных",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "При наличии результатов",
            "schema": {
              "$ref": "#/definitions/PrintFormReportDataDto"
            }
          },
          "204": {
            "description": "Данные не найдены"
          },
          "400": {
            "description": "При некорректном запросе",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModelStateEntry"
              }
            }
          },
          "500": {
            "description": "При внутренней ошибке сервера"
          }
        }
      }
    },
    "/api/v1/recepient-phone": {
      "get": {
        "tags": [
          "RecepientPhone"
        ],
        "summary": "Возвращает историю трекинга для указанного ШПИ",
        "operationId": "GetAsync",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "barcodes",
            "in": "query",
            "description": "ШПИ отправлений",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RecepientPhoneSearchResultDto"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/References": {
      "post": {
        "tags": [
          "References"
        ],
        "summary": "Получить обновления для справочников",
        "operationId": "GetUpdates",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "existReferencesInfo",
            "in": "body",
            "description": "Список информация о статусе обновления справочника",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceUpdateStatusDto"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceUpdateDto"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/References/regions/search": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получает список регионов по части имени",
        "operationId": "GetRegionsByName",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "namepart",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Region"
              }
            }
          }
        }
      }
    },
    "/api/References/macroregions/search": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получает список макрорегионов по части имени",
        "operationId": "GetMacroregionsByName",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "namepart",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Macroregion"
              }
            }
          }
        }
      }
    },
    "/api/Rpo/fromTrackingHistory/{trackId}": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Находит РПО по штрих-коду, сначали ищем в СРВО, и если не нашли, то в трекинге",
        "operationId": "FindRpoFromIncomingOrTracking",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Штрихкод РПО",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RpoFromHistory"
            }
          }
        }
      }
    },
    "/api/Rpo/tracking/{trackId}": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Находит список РПО по ШПИ в трекинге",
        "operationId": "FindAllFromTracking",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "ШПИ",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RpoFromHistory"
              }
            }
          }
        }
      }
    },
    "/api/Rpo/seekById/{barCode}": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Находит РПО по штрих-коду или неполному штрих-коду",
        "operationId": "SeekByRpoIdentifier",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "barCode",
            "in": "path",
            "description": "Штрихкод РПО",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RpoFromHistory"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/Rpo/seekPossible": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Находит возможные РПО в СРВО",
        "operationId": "FindPossibleInIncoming",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "ФИО",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "Адрес",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Номер телефона",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ограничение на кол-во возвращаемых результатов",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RpoFromHistory"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/Rpo/fromTrackingHistoryByPhoneNumber/{phone}": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Находит РПО по номеру телефона",
        "operationId": "HistoryByPhone",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "description": "Номер телефона",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RpoFromHistory"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/Rpo/findby/{context}/{query}/{pageNumber}/{pageSize}": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Поиск РПО в рамках ОПС и заданного контекста поиска",
        "operationId": "FindBy",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "description": "Контекст поиска. Передается в виде RussianPost.ANM.HermesApi.Domain.Core.RPO.Imrs.SearchContext",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ]
          },
          {
            "name": "query",
            "in": "path",
            "description": "Поисковый запрос. Представляет собой полное или частичное значение ШПИ, ФИО, адреса или телефона",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "Номер страницы, по умолчанию 1",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "name": "pageSize",
            "in": "path",
            "description": "Размер страницы, по умолчанию 10",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/Rpo/findby": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Поиск РПО в рамках ОПС и заданного контекста поиска",
        "operationId": "FindBy",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Контекст поиска. Передается в виде RussianPost.ANM.HermesApi.Domain.Core.RPO.Imrs.SearchContext",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ]
          },
          {
            "name": "query",
            "in": "query",
            "description": "Поисковый запрос. Представляет собой полное или частичное значение ШПИ, ФИО, адреса или телефона",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы, по умолчанию 1",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Размер страницы, по умолчанию 10",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Rpo/recipientPhone": {
      "get": {
        "tags": [
          "Rpo"
        ],
        "summary": "Поиск номер получателя по ШПИ",
        "operationId": "GetRecipientPhone",
        "consumes": [

        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "shipmentId",
            "in": "query",
            "description": "ШПИ",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/postoffices/{postOfficeZipCode}/simple-cod": {
      "post": {
        "tags": [
          "SimpleCod"
        ],
        "summary": "Создает заказ на выдачу и возвращает данные о товарных вложениях для РПО с COD для упрощенной выдачи в ЕАС (Без UI)",
        "operationId": "PostAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "postofficeZipCode",
            "in": "path",
            "description": "Индекс отделения",
            "required": true,
            "type": "string"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "Данные для оформления заказа на выдачу",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SimpleCodInputDto"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimpleCodOutputDto"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/tracking-history/{barcode}": {
      "get": {
        "tags": [
          "TrackingHistory"
        ],
        "summary": "Возвращает историю трекинга для указанного ШПИ",
        "operationId": "GetAsync",
        "consumes": [

        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "ШПИ отправления",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "Bearer ef47df0b90176fde6488d45fdf25a118ce9ff0b2433a7ee71e4df52db82f3ce4"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrackingHistoryDto"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Procuration": {
      "description": "Модель - доверенность",
      "type": "object",
      "properties": {
        "Number": {
          "description": "Номер доверенности",
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "description": "Дата доверености",
          "type": "string"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ValidationDataDto": {
      "description": "Модель для валидации данных",
      "required": [
        "Context",
        "Data"
      ],
      "type": "object",
      "properties": {
        "Context": {
          "format": "int32",
          "description": "Контекст валидации",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Data": {
          "description": "Данные для валидации",
          "type": "object"
        }
      }
    },
    "ValidationStatus": {
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "AddressToCleanDto": {
      "description": "Адрес для очистки",
      "required": [
        "Address"
      ],
      "type": "object",
      "properties": {
        "Address": {
          "description": "Адрес",
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "RawSource": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "District": {
          "type": "string"
        },
        "RegionType": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "RayonType": {
          "type": "string"
        },
        "Rayon": {
          "type": "string"
        },
        "CityType": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "SettlementType": {
          "type": "string"
        },
        "Settlement": {
          "type": "string"
        },
        "StreetType": {
          "type": "string"
        },
        "Street": {
          "type": "string"
        },
        "HouseNumber": {
          "type": "string"
        },
        "MilitaryNumber": {
          "type": "string"
        },
        "PostalBox": {
          "type": "string"
        },
        "Korpus": {
          "type": "string"
        },
        "Stroenie": {
          "type": "string"
        },
        "Vladenie": {
          "type": "string"
        },
        "Hostel": {
          "type": "string"
        },
        "Floor": {
          "type": "string"
        },
        "Entrance": {
          "type": "string"
        },
        "Section": {
          "type": "string"
        },
        "Flat": {
          "type": "string"
        },
        "Flat2": {
          "type": "string"
        },
        "Office": {
          "type": "string"
        },
        "Office2": {
          "type": "string"
        },
        "Room": {
          "type": "string"
        },
        "Room2": {
          "type": "string"
        }
      }
    },
    "F22Dto": {
      "description": "Модель формы Ф22",
      "type": "object",
      "properties": {
        "RecipientName": {
          "description": "ФИО получателя",
          "type": "string"
        },
        "ReceiptPostOfficeZipCode": {
          "description": "Индекс ОПС места вручения",
          "type": "string"
        },
        "RecipientRegistrationAddress": {
          "description": "Адрес регистрации",
          "type": "string"
        },
        "RecipientIndex": {
          "description": "Индекс получателя",
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "description": "Наименование типа документа",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22
          ],
          "type": "integer"
        },
        "DocumentNumber": {
          "description": "Номер документа",
          "type": "string"
        },
        "DocumentSeries": {
          "description": "Серия документа",
          "type": "string"
        },
        "DocumentIssueDate": {
          "format": "date-time",
          "description": "Дата выдачи документа",
          "type": "string"
        },
        "DocumentIssuer": {
          "description": "Кем выдан документ",
          "type": "string"
        },
        "DocumentIssuerCode": {
          "description": "Код подразделения, выдавшего документ",
          "type": "string"
        },
        "Sum": {
          "format": "double",
          "description": "Сумма?",
          "type": "number"
        },
        "Rpos": {
          "description": "Данные РПО для которых нужно сформировать формы F22",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/F22RpoDto"
          }
        }
      }
    },
    "F22RpoDto": {
      "description": "Данные о конкретном РПО для генерации Ф22",
      "type": "object",
      "properties": {
        "RecipientName": {
          "description": "ФИО или наименование организации получателя",
          "type": "string"
        },
        "RecipientAddress": {
          "description": "Адрес получателя",
          "type": "string"
        },
        "TrackNumber": {
          "description": "ШПИ",
          "type": "string"
        },
        "IsCashOnDelivery": {
          "description": "Наложенный платеж",
          "type": "boolean"
        },
        "IsInsured": {
          "description": "С объявленной ценностью",
          "type": "boolean"
        },
        "Weight": {
          "format": "int32",
          "description": "Вес меньше 9999",
          "type": "integer"
        },
        "MailType": {
          "format": "int32",
          "description": "Тип отправления",
          "type": "integer"
        },
        "SummCashOnDelivery": {
          "format": "int32",
          "description": "Сумма наложенного платежа в копейках",
          "type": "integer"
        },
        "IsEms": {
          "description": "Отправление ЕМС",
          "type": "boolean"
        },
        "SummInsured": {
          "format": "int32",
          "description": "Сумма ОЦ в копейках",
          "type": "integer"
        },
        "OfficeIndex": {
          "description": "Индекс почтового отправления",
          "type": "string"
        },
        "SendingDate": {
          "format": "date-time",
          "description": "Дата отправления dd.MM.yyyy",
          "type": "string"
        },
        "SenderAddress": {
          "description": "Адрес отправителя",
          "type": "string"
        },
        "IncomingNumber": {
          "description": "Входящий номер РПО",
          "type": "string"
        },
        "RackNumber": {
          "description": "Номер места адресного хранения РПО в ОПС.",
          "type": "string"
        },
        "MailCtg": {
          "format": "int32",
          "description": "Категория отправления (РТМ 0002)",
          "type": "integer"
        },
        "MailRank": {
          "format": "int32",
          "description": "Разряд отправления (РТМ 0002)",
          "type": "integer"
        }
      }
    },
    "OldMakeMailOutOrderDto": {
      "description": "DTO для оформления заказа на выдачу РПО.",
      "required": [
        "BarCodes"
      ],
      "type": "object",
      "properties": {
        "BarCodes": {
          "description": "Баркоды выданных РПО",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ClientHid": {
          "description": "Hid клиента, если клиент авторизован через ПочтаID",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "IsTakedViaPep": {
          "description": "Признак того, что РПО выданы с использованием ПЭП (Ф22 не была напечатана)",
          "type": "boolean"
        }
      }
    },
    "MakeMailOutOrderDto": {
      "description": "DTO для оформления заказа на выдачу РПО.",
      "required": [
        "Rpos"
      ],
      "type": "object",
      "properties": {
        "Rpos": {
          "description": "Баркоды выданных РПО",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RpoInfo"
          }
        },
        "SimpleMails": {
          "description": "Выданные ППО",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleMailDto"
          }
        },
        "ClientHid": {
          "description": "Hid клиента, если клиент авторизован через ПочтаID",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "IsTakedViaPep": {
          "description": "Признак того, что РПО выданы с использованием ПЭП (Ф22 не была напечатана)",
          "type": "boolean"
        },
        "ClientInfo": {
          "$ref": "#/definitions/ClientInfo",
          "description": "Информация о клиенте"
        },
        "IsTakenViaEasPlugin": {
          "description": "Выдача происходит через плагин ЕАС?",
          "type": "boolean"
        },
        "EasTerminalId": {
          "description": "Id терминала еас либо null при отправке не из ЕАС",
          "type": "string"
        },
        "ProcurationNumber": {
          "description": "Номер доверенности (необязательный)",
          "type": "string"
        },
        "ProcurationDate": {
          "format": "date-time",
          "description": "Дата доверенности",
          "type": "string"
        },
        "SystemCreated": {
          "format": "int32",
          "description": "Где был создан заказ",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "RpoInfo": {
      "description": "Информация об выданном РПО",
      "required": [
        "BarCode"
      ],
      "type": "object",
      "properties": {
        "BarCode": {
          "description": "ШПИ отправления",
          "type": "string"
        },
        "ReceiverName": {
          "description": "ФИО получателя РПО",
          "type": "string"
        },
        "Weight": {
          "format": "int32",
          "description": "Масса РПО, г.",
          "type": "integer"
        },
        "MailType": {
          "format": "int32",
          "description": "Тип РПО",
          "type": "integer"
        },
        "MailCategory": {
          "format": "int32",
          "description": "Категория РПО",
          "type": "integer"
        },
        "IsFoundViaPostPassport": {
          "description": "Найдено с помомщью ввода почтового паспорта\r\n(необходимо для расчета статистики)",
          "type": "boolean"
        },
        "Payments": {
          "description": "Платежи для РПО",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MailOutPaymentDto"
          }
        },
        "CustomStatus": {
          "format": "int32",
          "description": "Статус таможенного платежа.",
          "type": "integer"
        },
        "CustomDuty": {
          "format": "int32",
          "description": "Сумма таможенного платежа в копейках.",
          "type": "integer"
        },
        "Mode": {
          "format": "int32",
          "description": "Режим вручения",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "SimpleMailDto": {
      "description": "Информация о ППО",
      "type": "object",
      "properties": {
        "MailType": {
          "format": "int32",
          "description": "Тип РПО",
          "type": "integer"
        },
        "Count": {
          "format": "int32",
          "description": "Количество ППО одного типа",
          "type": "integer"
        }
      }
    },
    "ClientInfo": {
      "description": "Информация о клиенте",
      "type": "object",
      "properties": {
        "Hid": {
          "description": "Идентификатор в Почта ID",
          "type": "string"
        },
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "MiddleName": {
          "description": "Отчество",
          "type": "string"
        },
        "Gender": {
          "format": "int32",
          "description": "Пол",
          "type": "integer"
        },
        "BirthDate": {
          "format": "date-time",
          "description": "Дата рождения",
          "type": "string"
        },
        "Documents": {
          "description": "Список документов",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientDocument"
          }
        },
        "BarcodePostBank": {
          "description": "Баркод почтового паспорта",
          "type": "string"
        },
        "Inn": {
          "description": "ИНН",
          "type": "string"
        }
      }
    },
    "MailOutPaymentDto": {
      "description": "Платежи по РПО",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ClientPaymentId": {
          "description": "Идентификатор платежа от клиента - для получения соответствия в ответе сервиса\r\n(генерирует клиент)",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "Тип платежа",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Value": {
          "$ref": "#/definitions/PaymentItemDto",
          "description": "Общая сумма платежа без комиссии"
        },
        "Commission": {
          "$ref": "#/definitions/PaymentItemDto",
          "description": "Общая сумма комиссии включая НДС в копейках"
        }
      }
    },
    "ClientDocument": {
      "description": "Описывает документ клиента",
      "type": "object",
      "properties": {
        "IsPrimary": {
          "description": "Признак основного документа",
          "type": "boolean"
        },
        "DocumentSeries": {
          "description": "Серия документа",
          "type": "string"
        },
        "DocumentNumber": {
          "description": "Номер документа",
          "type": "string"
        },
        "IssueAuthority": {
          "description": "Орган, выдавший документ",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "Дата выдачи документа",
          "type": "string"
        },
        "DepartmentCode": {
          "description": "Код подразделения органа, выдавшего документ",
          "type": "string"
        },
        "ExpiryDate": {
          "format": "date-time",
          "description": "Дата истечения срока действия",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "Тип ДУЛ. Тип документа, удостоверяющего личность. По умолчанию OTHER Доступные значения в  Классификаторе",
          "type": "integer"
        },
        "TypeName": {
          "description": "Отображаемое нименование типа",
          "type": "string"
        }
      }
    },
    "PaymentItemDto": {
      "description": "Элемент платежа объединяющий суммму платежа, НДС и сумму без НДС",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование платежа",
          "type": "string"
        },
        "VatType": {
          "format": "int32",
          "description": "Ставка налога",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ValueWithVat": {
          "format": "int32",
          "description": "Значение цены в копейках, включая налог",
          "type": "integer"
        },
        "Vat": {
          "format": "int32",
          "description": "Значение Ндс",
          "type": "integer"
        }
      }
    },
    "MailOutOrderCreateResult": {
      "description": "Результат создания заказа на выдачу РПО",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Идентификатор заказа",
          "type": "integer"
        },
        "Payments": {
          "description": "Данные о необходимых платежах. Словарь с ключем в виде ШПИ System.String и id платежа c соотв. номером НП в качестве значения",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UiPaymentInfo"
          }
        }
      }
    },
    "UiPaymentInfo": {
      "description": "Класс Информации о платеже для веб клиента",
      "type": "object",
      "properties": {
        "PaymentId": {
          "format": "int64",
          "description": "Ид платежа",
          "type": "integer"
        },
        "TransferCodNumber": {
          "format": "int32",
          "description": "Номер перевода (номер приема НП)",
          "type": "integer"
        }
      }
    },
    "DevicesServiceOrderPaymentInfoDto": {
      "description": "DTO с данными об оплате, приходящая со службы работы с устройствами",
      "required": [
        "ReceiptNumber",
        "ReceiptDateUtc",
        "TableNumber",
        "SessionNumber",
        "SessionDateUtc"
      ],
      "type": "object",
      "properties": {
        "ReceiptNumber": {
          "description": "Номер чека",
          "maxLength": 50,
          "type": "string"
        },
        "ReceiptDateUtc": {
          "format": "date-time",
          "description": "Дата чека в UTC",
          "type": "string"
        },
        "TableNumber": {
          "description": "Номер окна (кассы)",
          "maxLength": 50,
          "type": "string"
        },
        "TransactionData": {
          "$ref": "#/definitions/SaleCashRefundResponseDto",
          "description": "Данные о транзакции"
        },
        "SessionNumber": {
          "format": "int32",
          "description": "Номер смены",
          "type": "integer"
        },
        "SessionDateUtc": {
          "format": "date-time",
          "description": "Дата смены в UTC",
          "type": "string"
        },
        "DocNumber": {
          "format": "int32",
          "description": "Сквозной номер документа (фиск. номер документа)",
          "type": "integer"
        },
        "SerialNumber": {
          "description": "Серийный номер принтера",
          "type": "string"
        },
        "FiscalNumber": {
          "description": "Серийный номер ФН",
          "type": "string"
        },
        "PrinterName": {
          "description": "Название принтера (непонятно зачем)",
          "type": "string"
        },
        "Inn": {
          "description": "ИНН",
          "type": "string"
        },
        "KktRegNumber": {
          "description": "регистрационный номер ККТ (точно нужны)",
          "type": "string"
        },
        "KktFiscalNumber": {
          "description": "заводской номер фискального накопителя (точно нужны)",
          "type": "string"
        },
        "DocFiscalAttr": {
          "description": "Фискальный признак документа (точно нужны)",
          "type": "string"
        }
      }
    },
    "SaleCashRefundResponseDto": {
      "description": "Результат выполнения платежной транзакции через терминал оплаты",
      "required": [
        "amount",
        "currencyCode",
        "dateTimeHost",
        "cardNumber",
        "responseCodeHost",
        "trxId",
        "operationCode",
        "trxIdCrm",
        "status",
        "cardEntryMode",
        "track2",
        "amountFee",
        "terminalOutId"
      ],
      "type": "object",
      "properties": {
        "amount": {
          "format": "int32",
          "description": "Сумма операции, выраженная в минимальных единицах валюты",
          "type": "integer"
        },
        "currencyCode": {
          "description": "Код валюты операции",
          "type": "string"
        },
        "dateTimeHost": {
          "format": "date-time",
          "description": "Оригинальная дата и время совершения операции на хосте",
          "type": "string"
        },
        "cardNumber": {
          "description": "Номер карты",
          "type": "string"
        },
        "cardExpiryDate": {
          "$ref": "#/definitions/CardExpiriedDate",
          "description": "Срок действия карты"
        },
        "authorizationCode": {
          "description": "Код авторизации",
          "type": "string"
        },
        "referenceNumber": {
          "description": "Номер ссылки",
          "type": "string"
        },
        "responseCodeHost": {
          "description": "Код ответа",
          "type": "string"
        },
        "textResponse": {
          "description": "Дополнительные данные ответа",
          "type": "string"
        },
        "dateTimeCrm": {
          "format": "date-time",
          "description": "Оригинальная дата и время совершения операции на внешнем устройстве",
          "type": "string"
        },
        "trxId": {
          "format": "int32",
          "description": "Идентификатор транзакции в коммуникационном сервере",
          "type": "integer"
        },
        "operationCode": {
          "format": "int32",
          "description": "Код операции",
          "enum": [
            1,
            2,
            4,
            13,
            29
          ],
          "type": "integer"
        },
        "trxIdCrm": {
          "format": "int32",
          "description": "Уникальный номер транзакции на стороне внешнего устройства",
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "description": "Статус проведения транзакции",
          "enum": [
            0,
            1,
            13,
            16,
            17,
            34,
            53,
            -1
          ],
          "type": "integer"
        },
        "cardEntryMode": {
          "format": "int32",
          "description": "Способ ввода карты",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "track2": {
          "description": "Данные Track2",
          "type": "string"
        },
        "cvv2": {
          "description": "CVV2 карты",
          "type": "string"
        },
        "amountFee": {
          "format": "int32",
          "description": "Сумма комиссии по транзакции",
          "type": "integer"
        },
        "receiptData": {
          "description": "Данные для печати на чеке",
          "type": "string"
        },
        "terminalOutId": {
          "description": "Идентификатор логического терминала на хосте",
          "type": "string"
        }
      }
    },
    "CardExpiriedDate": {
      "description": "Срок действия карты",
      "type": "object",
      "properties": {
        "Month": {
          "format": "int32",
          "description": "Месяц",
          "type": "integer"
        },
        "Year": {
          "format": "int32",
          "description": "Год",
          "type": "integer"
        }
      }
    },
    "ModelStateEntry": {
      "type": "object",
      "properties": {
        "RawValue": {
          "type": "object"
        },
        "AttemptedValue": {
          "type": "string"
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelError"
          },
          "readOnly": true
        },
        "ValidationState": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "IsContainerNode": {
          "type": "boolean",
          "readOnly": true
        },
        "Children": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelStateEntry"
          },
          "readOnly": true
        }
      }
    },
    "ModelError": {
      "type": "object",
      "properties": {
        "Exception": {
          "type": "object",
          "readOnly": true
        },
        "ErrorMessage": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MailOutPaymentConfirmationInfoDto": {
      "description": "DTO для отмены платежа при выдаче РПО.",
      "required": [
        "TableNumber",
        "OperatorFullName",
        "FiscalInfo"
      ],
      "type": "object",
      "properties": {
        "OperationDate": {
          "format": "date-time",
          "description": "Время операции. (UTC)",
          "type": "string"
        },
        "TableNumber": {
          "description": "Номер окна (кассы).",
          "type": "string"
        },
        "OperatorId": {
          "description": "Идентификатор оператора.",
          "type": "string"
        },
        "OperatorFullName": {
          "description": "Ф.И.О. оператора.",
          "type": "string"
        },
        "FiscalInfo": {
          "description": "Фискальная информация.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FiscalInfoDto"
          }
        }
      }
    },
    "FiscalInfoDto": {
      "description": "Фискальная информация при подтверждении платежа.",
      "required": [
        "ReceiptDateUtc",
        "ReceiptNumber",
        "Amount"
      ],
      "type": "object",
      "properties": {
        "ReceiptDateUtc": {
          "format": "date-time",
          "description": "Дата чека в UTC",
          "type": "string"
        },
        "ReceiptNumber": {
          "description": "Номер чека",
          "type": "string"
        },
        "Amount": {
          "format": "int32",
          "description": "Сумма чека в копейках.",
          "type": "integer"
        },
        "PaymentMethod": {
          "format": "int32",
          "description": "Метод оплаты.",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "FiscalDriveNum": {
          "description": "Номер фискального накопителя.",
          "type": "string"
        },
        "RegNumKkt": {
          "description": "Регистрационный номер ККТ.",
          "type": "string"
        },
        "Inn": {
          "description": "ИНН.",
          "type": "string"
        },
        "FiscalDocNum": {
          "description": "Номер фискального документа.",
          "type": "string"
        },
        "FiscalDocAttr": {
          "description": "Фискальный признак документа.",
          "type": "string"
        },
        "PosTerminalInfo": {
          "$ref": "#/definitions/PosTerminalInfo",
          "description": "Информация о транзакции через пин-пад при оплате картой"
        }
      }
    },
    "PosTerminalInfo": {
      "description": "информация о транзакции через пин-пад при подтверждении платежа.",
      "type": "object",
      "properties": {
        "Rrn": {
          "description": "RRN",
          "type": "string"
        }
      }
    },
    "MailOutPaymentCancellationInfoDto": {
      "description": "DTO для отмены платежа при выдаче РПО.",
      "required": [
        "TableNumber",
        "OperatorId",
        "OperatorFullName"
      ],
      "type": "object",
      "properties": {
        "OperationDate": {
          "format": "date-time",
          "description": "Время операции. (UTC)",
          "type": "string"
        },
        "TableNumber": {
          "description": "Номер окна (кассы).",
          "type": "string"
        },
        "OperatorId": {
          "description": "Идентификатор оператора.",
          "type": "string"
        },
        "OperatorFullName": {
          "description": "Ф.И.О. оператора.",
          "type": "string"
        }
      }
    },
    "ShipmentsSyncInfoDto": {
      "description": "ДТО описывающий синхронизацию выданных РПО с ЕАС",
      "required": [
        "ShipmentsSyncInfo"
      ],
      "type": "object",
      "properties": {
        "ShipmentsSyncInfo": {
          "description": "Массив выданных РПО с информацией о синхронизации",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentSyncInfo"
          }
        }
      }
    },
    "ShipmentSyncInfo": {
      "description": "Класс описывающий синхронизацию выданного РПО с ЕАС",
      "type": "object",
      "properties": {
        "TrackingNumber": {
          "description": "ШПИ РПО",
          "type": "string"
        },
        "IsSynced": {
          "description": "Синхронизовано ли РПО",
          "type": "boolean"
        },
        "Errors": {
          "format": "int32",
          "description": "Совокупный код ошибок синхронизации",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            8192,
            16384,
            32768,
            65536
          ],
          "type": "integer"
        },
        "Message": {
          "description": "Сообщение об ошибке",
          "type": "string"
        },
        "MailOutOrderItemId": {
          "format": "int64",
          "description": "Идентификатор записи о приеме РПО",
          "type": "integer"
        }
      }
    },
    "OzkClientInfoDto": {
      "description": "Информация о клиенте, полученная из ОЗК и информация о статусе поиска в ОЗК",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/OzkClientInfoDataDto",
          "description": "Информация о клиенте, полученная из ОЗК"
        },
        "state": {
          "format": "int32",
          "description": "Статус поиска",
          "enum": [
            0,
            1,
            2,
            99
          ],
          "type": "integer"
        }
      }
    },
    "OzkClientInfoDataDto": {
      "description": "Информация о клиенте, полученная из ОЗК",
      "type": "object",
      "properties": {
        "documentNumber": {
          "description": "Номер документа. Для documentType(21): серия+номер без пробелов,для documentType(10): номер без пробелов,для documentType(91): ИНН.",
          "type": "string"
        },
        "documentType": {
          "format": "int32",
          "description": "Тип документа",
          "type": "integer"
        },
        "email": {
          "description": "E-mail покупателя",
          "type": "string"
        },
        "firstName": {
          "description": "Имя покупателя",
          "type": "string"
        },
        "fullName": {
          "description": "Полное ФИО покупателя",
          "type": "string"
        },
        "lastName": {
          "description": "Фамилия покупателя",
          "type": "string"
        },
        "middleName": {
          "description": "Отчество покупателя (при наличии)",
          "type": "string"
        },
        "phone": {
          "description": "Телефон покупателя",
          "type": "string"
        }
      }
    },
    "PersonDto": {
      "description": "Персона из PostId",
      "required": [
        "FirstName",
        "LastName",
        "Birthday",
        "Addresses",
        "Documents",
        "Phones"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор внешней системы",
          "type": "string"
        },
        "Hid": {
          "description": "Идентификатор в PostId",
          "type": "string"
        },
        "FirstName": {
          "description": "Имя",
          "maxLength": 50,
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "maxLength": 50,
          "type": "string"
        },
        "LastNameDative": {
          "description": "Фамилия в дательном падеже",
          "maxLength": 50,
          "type": "string"
        },
        "MiddleName": {
          "description": "Отчество",
          "maxLength": 50,
          "type": "string"
        },
        "Birthday": {
          "format": "date-time",
          "description": "День рождения",
          "type": "string"
        },
        "PensionNumber": {
          "description": "Страховое свидетельство обязательного пенсионного страхования (СНИЛС)",
          "maxLength": 20,
          "type": "string"
        },
        "CitizenShip": {
          "description": "Гражданство",
          "maxLength": 50,
          "type": "string"
        },
        "Inn": {
          "description": "ИНН",
          "maxLength": 20,
          "type": "string"
        },
        "IsResidence": {
          "description": "Признак резидента",
          "type": "boolean"
        },
        "Gender": {
          "format": "int32",
          "description": "Пол",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Addresses": {
          "description": "Список адресов",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAddress"
          }
        },
        "Documents": {
          "description": "Список документов ФЛ (паспорт и другие) для ИП",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonDocument"
          }
        },
        "Phones": {
          "description": "Список телефонов",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonPhone"
          }
        },
        "Mails": {
          "description": "Список email",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonEmail"
          }
        },
        "Services": {
          "description": "Услуги",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer"
          }
        },
        "BarcodePostBank": {
          "description": "Баркод карты ПочтаБанка",
          "maxLength": 13,
          "type": "string"
        },
        "IsClientPostBank": {
          "description": "Является клиентом ПочтаБанка",
          "type": "boolean"
        },
        "SourceSystemType": {
          "format": "int32",
          "description": "Тип аккаунта",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Agreements": {
          "description": "Соглашения с пользователем",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2
            ],
            "type": "integer"
          }
        },
        "BarCodeBlueCard": {
          "description": "Баркод карты \"Синего почтового паспорта\"",
          "maxLength": 13,
          "type": "string"
        }
      }
    },
    "PersonAddress": {
      "type": "object",
      "properties": {
        "Hid": {
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            52
          ],
          "type": "integer"
        },
        "TypeName": {
          "type": "string",
          "readOnly": true
        },
        "IsPrimary": {
          "type": "boolean"
        },
        "RawSource": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "District": {
          "type": "string"
        },
        "RegionType": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "RayonType": {
          "type": "string"
        },
        "Rayon": {
          "type": "string"
        },
        "CityType": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "SettlementType": {
          "type": "string"
        },
        "Settlement": {
          "type": "string"
        },
        "StreetType": {
          "type": "string"
        },
        "Street": {
          "type": "string"
        },
        "HouseNumber": {
          "type": "string"
        },
        "MilitaryNumber": {
          "type": "string"
        },
        "PostalBox": {
          "type": "string"
        },
        "Korpus": {
          "type": "string"
        },
        "Stroenie": {
          "type": "string"
        },
        "Vladenie": {
          "type": "string"
        },
        "Hostel": {
          "type": "string"
        },
        "Floor": {
          "type": "string"
        },
        "Entrance": {
          "type": "string"
        },
        "Section": {
          "type": "string"
        },
        "Flat": {
          "type": "string"
        },
        "Flat2": {
          "type": "string"
        },
        "Office": {
          "type": "string"
        },
        "Office2": {
          "type": "string"
        },
        "Room": {
          "type": "string"
        },
        "Room2": {
          "type": "string"
        }
      }
    },
    "PersonDocument": {
      "type": "object",
      "properties": {
        "IsPrimary": {
          "type": "boolean"
        },
        "IsConfirmed": {
          "type": "boolean"
        },
        "AdditionalInfo": {
          "type": "string"
        },
        "TypeName": {
          "type": "string",
          "readOnly": true
        },
        "Type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22
          ],
          "type": "integer"
        },
        "DocumentSeries": {
          "type": "string"
        },
        "DocumentNumber": {
          "type": "string"
        },
        "IssueAuthority": {
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "type": "string"
        },
        "DepartmentCode": {
          "type": "string"
        },
        "ExpiryDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PersonPhone": {
      "type": "object",
      "properties": {
        "Hid": {
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "TypeName": {
          "type": "string",
          "readOnly": true
        },
        "IsPrimary": {
          "type": "boolean"
        },
        "Phone": {
          "type": "string"
        },
        "AdditionalInfo": {
          "type": "string"
        },
        "RawSource": {
          "type": "string"
        },
        "IsConfirmed": {
          "type": "boolean"
        }
      }
    },
    "PersonEmail": {
      "type": "object",
      "properties": {
        "Hid": {
          "type": "string"
        },
        "IsPrimary": {
          "type": "boolean"
        },
        "Type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "TypeName": {
          "type": "string",
          "readOnly": true
        },
        "Email": {
          "type": "string"
        },
        "IsConfirmed": {
          "type": "boolean"
        },
        "AdditionalInfo": {
          "type": "string"
        }
      }
    },
    "Person": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Hid": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "LastNameDative": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "Birthday": {
          "format": "date-time",
          "type": "string"
        },
        "PensionNumber": {
          "type": "string"
        },
        "CitizenShip": {
          "type": "string"
        },
        "Inn": {
          "type": "string"
        },
        "IsResidence": {
          "type": "boolean"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Gender": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Addresses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAddress"
          }
        },
        "Documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonDocument"
          }
        },
        "Phones": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonPhone"
          }
        },
        "Mails": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonEmail"
          }
        },
        "Services": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer"
          }
        },
        "ServiceInfo": {
          "type": "object",
          "properties": {
            "Unknown": {
              "$ref": "#/definitions/PersonServiceInfo"
            },
            "OpsSimpleSignature": {
              "$ref": "#/definitions/PersonServiceInfo"
            },
            "DigitalF22": {
              "$ref": "#/definitions/PersonServiceInfo"
            }
          }
        },
        "SourceSystemType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "AccountType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Agreements": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2
            ],
            "type": "integer"
          }
        },
        "PersonClaims": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonClaim"
          },
          "readOnly": true
        },
        "ExternalSystemIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalSystemId"
          },
          "readOnly": true
        },
        "BarcodePostBank": {
          "type": "string",
          "readOnly": true
        },
        "BarCodeBlueCard": {
          "type": "string"
        },
        "IsClientPostBank": {
          "type": "boolean",
          "readOnly": true
        },
        "CreatePostOfficeZipCode": {
          "type": "string"
        }
      }
    },
    "PersonServiceInfo": {
      "type": "object",
      "properties": {
        "ConnectionDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PersonClaim": {
      "type": "object",
      "properties": {
        "SourceSystem": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExternalSystemId": {
      "type": "object",
      "properties": {
        "SourceSystemId": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PostIdProfile": {
      "description": "Анкета пользователя ПочтаИД",
      "type": "object",
      "properties": {
        "Person": {
          "$ref": "#/definitions/Person",
          "description": "Проифиль пользователя"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата и время создания",
          "type": "string"
        },
        "CreatedPostOfficeZipCode": {
          "description": "Индекс отделения, в котором была зарегистрирована анкета",
          "type": "string"
        }
      }
    },
    "BussinessError": {
      "description": "Класс описывает бизнес ошибку",
      "type": "object",
      "properties": {
        "Code": {
          "format": "int32",
          "type": "integer"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "IsPersonExists": {
      "description": "Структура ответа на запрос существует ли анкета в сис-ме ПОСТ ИД",
      "type": "object",
      "properties": {
        "Exist": {
          "description": "Существует ли анкета",
          "type": "boolean"
        }
      }
    },
    "UnConnectServiceRequestDto": {
      "description": "Данные для подключения / отключения услуг",
      "required": [
        "Hid",
        "Service"
      ],
      "type": "object",
      "properties": {
        "Hid": {
          "description": "HID клиента",
          "type": "string"
        },
        "Service": {
          "format": "int32",
          "description": "Услуга",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Payload": {
          "description": "Доп данные",
          "type": "string"
        }
      }
    },
    "BusinessErrorDto": {
      "description": "Описывает DTO Для бизнес ошибки",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "Код ошибки",
          "type": "integer"
        },
        "message": {
          "description": "Текст ошибки",
          "type": "string"
        }
      }
    },
    "RequestAuthenticationDto": {
      "description": "Запрос авторизации",
      "type": "object",
      "properties": {
        "hid": {
          "description": "HID пользователя, которого необходимо аутентифицировать",
          "type": "string"
        },
        "operation": {
          "description": "Операция требующая аутентификацию",
          "type": "string"
        },
        "authenticationRequestMessage": {
          "description": "Текст сообщения",
          "type": "string"
        },
        "additionalData": {
          "$ref": "#/definitions/RequestAuthenticationAdditionalData",
          "description": "Дополнительные данные"
        }
      }
    },
    "RequestAuthenticationAdditionalData": {
      "description": "Описывает дополнительные данные",
      "type": "object",
      "properties": {
        "shipmentIds": {
          "description": "Выдаваемые ШПИ, в случае, если ПЭП используется для выдачи",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RequestAuthenticationResultDto": {
      "description": "Ответ, возвращаемый M:RussianPost.ANM.HermesApi.Web.Controllers.PostIdAuthenticationController.RequestAuthentication(RussianPost.ANM.HermesApi.Web.Models.PostIdAuthentication.RequestAuthenticationDto)",
      "type": "object",
      "properties": {
        "authenticationId": {
          "description": "Идентификатор запроса аутентификации. Отсутствует если status = UNABLE_TO_AUTHENTICATE",
          "type": "string"
        },
        "status": {
          "description": "Статус операции (UNABLE_TO_AUTHENTICATE|AUTHENTICATION_REQUEST_SENT)",
          "type": "string"
        }
      }
    },
    "RequestCheckDto": {
      "description": "DTO запроса для M:RussianPost.ANM.HermesApi.Web.Controllers.PostIdAuthenticationController.RequestCheck(RussianPost.ANM.HermesApi.Web.Models.PostIdAuthentication.RequestCheckDto)",
      "type": "object",
      "properties": {
        "authenticationId": {
          "description": "Идентификатор запроса аутентификации",
          "type": "string"
        },
        "code": {
          "description": "Код аутентификации",
          "type": "string"
        }
      }
    },
    "RequestCheckResponseDto": {
      "description": "Ответ, возвращаемый M:RussianPost.ANM.HermesApi.Web.Controllers.PostIdAuthenticationController.RequestCheck(RussianPost.ANM.HermesApi.Web.Models.PostIdAuthentication.RequestCheckDto)",
      "type": "object",
      "properties": {
        "status": {
          "description": "Статус аутентификации (AUTHENTICATED|UNAUTHENTICATED)",
          "type": "string"
        }
      }
    },
    "RequestStatusResponseDto": {
      "description": "Ответ, возвращаемый M:RussianPost.ANM.HermesApi.Web.Controllers.PostIdAuthenticationController.RequestStatus(System.String)",
      "type": "object",
      "properties": {
        "status": {
          "description": "Статус аутентификации (AUTHENTICATED|UNAUTHENTICATED)",
          "type": "string"
        }
      }
    },
    "EcomInvoiceIncomDataDto": {
      "description": "Дто для передачи данных для печати квитанции ЕКОМ",
      "required": [
        "barcodes"
      ],
      "type": "object",
      "properties": {
        "receiverFullName": {
          "description": "Полное имя получателя\r\nЕсли null, будет использоваться имя получателя из данных ЕКОМ",
          "type": "string"
        },
        "barcodes": {
          "description": "Список ШИ ЕКОМ для которых нужно распечатать квитанцию",
          "minLength": 1,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "barcodeLineIds": {
          "description": "Список идентификаторов вложений указанного еком, которые необходимо включить в печать.\r\nЕсли список идектификаторов для ЕКОМа не указан (в словаре нет ключа с ШПИ ЕКОМА), печатаются все вложения данного ЕКОМ",
          "type": "object",
          "additionalProperties": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "PrintEcomInvoiceForm": {
      "description": "Дто для передачи данных для печати квитанции для нескольких ЕКОМ",
      "type": "object",
      "properties": {
        "EcomInfos": {
          "description": "Информация для печати квитанции для нескольких ЕКОМ",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintEcomInvoiceItem"
          }
        }
      }
    },
    "PrintEcomInvoiceItem": {
      "description": "Дто для передачи данных для печати квитанции для нескольких ДТО",
      "type": "object",
      "properties": {
        "InvoiceNumber": {
          "description": "Номер квитанции",
          "type": "string"
        },
        "MarketplaceName": {
          "description": "Наименование интернет магазина",
          "type": "string"
        },
        "MarketplaceOrderNumber": {
          "description": "Номер заказа, присвоенный интернет магазином",
          "type": "string"
        },
        "EcomBarcode": {
          "description": "Баркод ЕКОМ",
          "type": "string"
        },
        "OrderCreatedDate": {
          "description": "Дата создания заказа",
          "type": "string"
        },
        "ReceiverFullName": {
          "description": "Полное имя получателя",
          "type": "string"
        },
        "ReceiverAddress": {
          "description": "Адрес получателя",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "Info": {
          "description": "Какое-то инфо",
          "type": "string"
        },
        "DeliveryTypeDesc": {
          "description": "Информация о типе доставки",
          "type": "string"
        },
        "PaymentTypeDesc": {
          "description": "Информация о типе оплаты",
          "type": "string"
        },
        "Weight": {
          "format": "double",
          "description": "Вес в кг",
          "type": "number"
        },
        "ProductPrice": {
          "format": "double",
          "description": "Стоимость товара",
          "type": "number"
        },
        "DeliveryPrice": {
          "format": "double",
          "description": "Стоимость доставки",
          "type": "number"
        },
        "OrderPrice": {
          "format": "double",
          "description": "Стоимость заказа",
          "type": "number"
        },
        "TotalPrice": {
          "format": "double",
          "description": "Всего оплате",
          "type": "number"
        },
        "Goods": {
          "description": "Список товаров",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintEcomInvoiceGoods"
          }
        },
        "GoodsCount": {
          "format": "int32",
          "description": "Кол-во всех товаров в заказе",
          "type": "integer"
        },
        "PaidFromClientBankAccount": {
          "format": "double",
          "description": "Оплачено с клиентского счета",
          "type": "number"
        },
        "InvoiceTotal": {
          "format": "double",
          "description": "Итого",
          "type": "number"
        }
      }
    },
    "PrintEcomInvoiceGoods": {
      "description": "Информация о вложении в составе ЕКОМ для квитанции",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование продукта",
          "type": "string"
        },
        "Price": {
          "format": "double",
          "description": "Цена за единицу",
          "type": "number"
        },
        "Count": {
          "format": "int32",
          "description": "Кол-во позиций",
          "type": "integer"
        },
        "TotalPrice": {
          "format": "double",
          "description": "RussianPost.ANM.HermesApi.MailOut.PrintForm.Models.Ecom.PrintEcomInvoiceGoods.Price * RussianPost.ANM.HermesApi.MailOut.PrintForm.Models.Ecom.PrintEcomInvoiceGoods.Count",
          "type": "number"
        }
      }
    },
    "EcomMarketplaceReceiptDataDto": {
      "description": "DTO для передачи данных для печати квитанции ЕКОМ Marketplace",
      "required": [
        "barcodes",
        "utcOffset"
      ],
      "type": "object",
      "properties": {
        "receiverName": {
          "description": "Полное имя получателя (Заполняется только в случае доверенности)\r\nЕсли не null, будет использоваться пустое имя получателя",
          "type": "string"
        },
        "barcodes": {
          "description": "Список ШИ ЕКОМ для которых нужно распечатать квитанцию",
          "minLength": 1,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "utcOffset": {
          "format": "int32",
          "description": "Смещение часового пояса от UTC (в минутах)",
          "type": "integer"
        }
      }
    },
    "PrintEcomMarketplaceReceiptForm": {
      "description": "DTO для передачи данных для печати квитанции для нескольких ЕКОМ Marketplace",
      "type": "object",
      "properties": {
        "Data": {
          "description": "Информация для печати квитанции для нескольких ЕКОМ Marketplace",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintEcomMarketplaceReceiptItem"
          }
        }
      }
    },
    "PrintEcomMarketplaceReceiptItem": {
      "description": "DTO для передачи данных для печати квитанции для нескольких ДТО",
      "type": "object",
      "properties": {
        "Date": {
          "description": "Дата расписки",
          "type": "string"
        },
        "Barcode": {
          "description": "ШПИ",
          "type": "string"
        },
        "SenderName": {
          "description": "Грузоотправитель (ФИО)",
          "type": "string"
        },
        "ReceiverName": {
          "description": "Полное имя получателя",
          "type": "string"
        },
        "Weight": {
          "format": "double",
          "description": "Вес в кг",
          "type": "number"
        }
      }
    },
    "PrintFormDataDto": {
      "description": "ДТО с данными для печатной формы",
      "type": "object",
      "properties": {
        "OpsInfo": {
          "$ref": "#/definitions/PrintFormOpsInfoDto",
          "description": "Информация об ОПС"
        },
        "ReceiverFact": {
          "$ref": "#/definitions/PrintFormPersonDto",
          "description": "Фактический получатель"
        },
        "Rpo": {
          "description": "Список РПО",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintFormRpoDto"
          }
        },
        "ProcurationNumber": {
          "description": "Номер доверенности (необязательный)",
          "type": "string"
        },
        "ProcurationDate": {
          "format": "date-time",
          "description": "Дата доверенности",
          "type": "string"
        }
      }
    },
    "PrintFormOpsInfoDto": {
      "description": "ДТО с дополнительными данными по данным ОПС (сотрудник, окно, ОПС)",
      "type": "object",
      "properties": {
        "Index": {
          "description": "Индекс ОПС",
          "type": "string"
        },
        "Address": {
          "description": "Адрес ОПС",
          "type": "string"
        },
        "Phone": {
          "description": "Контактные телефоны",
          "type": "string"
        },
        "CourierPhone": {
          "description": "Номер телефона для вызова курьера",
          "type": "string"
        },
        "ClaimSmsPhone": {
          "description": "Номер телефона для подачи SMS в случае непринятия ф22",
          "type": "string"
        },
        "ClaimPhone": {
          "description": "Номер телефона для подачи жалоб",
          "type": "string"
        },
        "WorkDateTimeInfo": {
          "description": "Расписание работы ОПС",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostofficeShedule"
          }
        },
        "WorkDateTimeInfoString": {
          "description": "Строка с описанием времени работы ОПС",
          "type": "string",
          "readOnly": true
        },
        "Terminal": {
          "description": "Номер окна",
          "type": "string"
        },
        "IsMobileTerminal": {
          "description": "Мобильный терминал",
          "type": "boolean"
        },
        "OperatorName": {
          "description": "ФИО сотрудника",
          "type": "string"
        },
        "OperatorNumber": {
          "description": "Табельный номер сотрудника",
          "type": "string"
        },
        "OperatorPosition": {
          "description": "Должность сотрудника",
          "type": "string"
        }
      }
    },
    "PrintFormPersonDto": {
      "description": "ДТО с данными для отправителя или получателя",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Имя отправителя/получателя",
          "type": "string"
        },
        "Company": {
          "description": "Название компании отправителя/получателя",
          "type": "string"
        },
        "Document": {
          "$ref": "#/definitions/PrintFormDocumentDto",
          "description": "Данные документа удостоверяющего личность"
        },
        "Index": {
          "description": "Индекс отправителя/получателя",
          "type": "string"
        },
        "AddressFull": {
          "description": "Адрес отправителя/получателя п полном виде строкой",
          "type": "string"
        },
        "Country": {
          "description": "Страна отправителя/получателя",
          "type": "string"
        },
        "CountryCode": {
          "format": "int32",
          "description": "Код страны отправителя/получателя 643 для РФ",
          "type": "integer"
        },
        "Region": {
          "description": "Регион отправителя/получателя",
          "type": "string"
        },
        "City": {
          "description": "Город отправителя/получателя",
          "type": "string"
        },
        "Address": {
          "description": "Адрес отправителя/получателя дом улица район (Без страны и города)",
          "type": "string"
        },
        "Phone": {
          "description": "Телефон отправителя/получателя",
          "type": "string"
        },
        "HasNotification": {
          "description": "Есть ли SMS уведомление отправителя/получателя (не заполняется для фактического получателя)",
          "type": "boolean"
        },
        "IsPayClient": {
          "description": "Признак что оплачивает пересылку",
          "type": "boolean"
        },
        "ContractNumber": {
          "description": "Договор с отправителем/получателем (если есть)",
          "type": "string"
        },
        "RegisterAddressFull": {
          "description": "Адрес регистрации отправителя/получателя п полном виде строкой",
          "type": "string"
        }
      }
    },
    "PrintFormRpoDto": {
      "description": "ДТО с данными РПО",
      "type": "object",
      "properties": {
        "Barcode": {
          "description": "ШПИ",
          "type": "string"
        },
        "IncomingNumber": {
          "description": "Входящий номер РПО",
          "type": "string"
        },
        "RackNumber": {
          "description": "Номер места адресного хранения РПО в ОПС.",
          "type": "string"
        },
        "MailType": {
          "format": "int32",
          "description": "Тип отправления",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            51,
            53,
            54
          ],
          "type": "integer"
        },
        "MailCategory": {
          "format": "int32",
          "description": "Категория отправления",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "MailRank": {
          "format": "int32",
          "description": "Код разрядов почтового отправления",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "HasInventory": {
          "description": "Есть ли опись",
          "type": "boolean"
        },
        "Weight": {
          "format": "int32",
          "description": "Вес в граммах",
          "type": "integer"
        },
        "DeliveryPayment": {
          "format": "int32",
          "description": "Наложенный платеж в копейках",
          "type": "integer"
        },
        "DeclaredValue": {
          "format": "int32",
          "description": "ОЦ в копейках",
          "type": "integer"
        },
        "InsuranceValue": {
          "format": "int32",
          "description": "Сумма страхования в копейках",
          "type": "integer"
        },
        "Tariff": {
          "format": "int32",
          "description": "Тариф за пересылку в копейках",
          "type": "integer"
        },
        "AddServiceTariff": {
          "format": "int32",
          "description": "Тариф за допуслуги (не включая СМС) в копейках",
          "type": "integer"
        },
        "SmsTariff": {
          "format": "int32",
          "description": "Тариф за СМС уведомления в копейках",
          "type": "integer"
        },
        "InsuranceTariff": {
          "format": "int32",
          "description": "Тариф за страхование в копейках",
          "type": "integer"
        },
        "DeclaredValueTariff": {
          "format": "int32",
          "description": "Тариф за ОЦ в копейках",
          "type": "integer"
        },
        "Payment": {
          "format": "int32",
          "description": "Общая плата за пересылку c НДС в копейках",
          "type": "integer"
        },
        "SendDate": {
          "format": "date-time",
          "description": "Дата отправки",
          "type": "string"
        },
        "Sender": {
          "$ref": "#/definitions/PrintFormPersonDto",
          "description": "Отправитель"
        },
        "Receiver": {
          "$ref": "#/definitions/PrintFormPersonDto",
          "description": "Получатель"
        },
        "IsFragile": {
          "description": "Есть отметка \"Осторожно\"",
          "type": "boolean"
        },
        "HasEmailNotification": {
          "description": "Есть ли электронное уведомление отправителя/получателя (не заполняется для фактического получателя)",
          "type": "boolean"
        }
      }
    },
    "PostofficeShedule": {
      "description": "Расписание работы ОПС в рамках дня",
      "type": "object",
      "properties": {
        "DayOfWeek": {
          "format": "int32",
          "description": "День недели",
          "type": "integer"
        },
        "WorkTime": {
          "$ref": "#/definitions/PostofficeSheduleTimeRange",
          "description": "Рабочее время"
        },
        "RestTime": {
          "description": "Время перерывов",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostofficeSheduleTimeRange"
          }
        }
      }
    },
    "PrintFormDocumentDto": {
      "description": "ДТО с данными документа",
      "type": "object",
      "properties": {
        "Type": {
          "format": "int32",
          "description": "Код вида документа",
          "type": "integer"
        },
        "TypeName": {
          "description": "Название документа (заполняется на бэкенде)",
          "type": "string"
        },
        "Series": {
          "description": "Серия документа",
          "type": "string"
        },
        "Number": {
          "description": "Номер документа",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "Дата выдачи документа",
          "type": "string"
        },
        "ExpireDate": {
          "format": "date-time",
          "description": "Дата окончания действия документа",
          "type": "string"
        },
        "Issuer": {
          "description": "Кем выдан документ",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Код подразделения, выдавшего документ (если применимо)",
          "type": "string"
        },
        "AuthorizationNumber": {
          "description": "Номер доверенности",
          "type": "string"
        },
        "AuthorizationIssueDate": {
          "format": "date-time",
          "description": "Дата выдачи доверенности",
          "type": "string"
        }
      }
    },
    "PostofficeSheduleTimeRange": {
      "description": "Диапазон рабочего времени ОПС",
      "type": "object",
      "properties": {
        "Start": {
          "$ref": "#/definitions/PostofficeSheduleTime",
          "description": "Начало"
        },
        "Finish": {
          "$ref": "#/definitions/PostofficeSheduleTime",
          "description": "Конец"
        }
      }
    },
    "PostofficeSheduleTime": {
      "description": "Время работы ОПС",
      "type": "object",
      "properties": {
        "Hour": {
          "format": "int32",
          "description": "Часы",
          "type": "integer"
        },
        "Minute": {
          "format": "int32",
          "description": "Минуты",
          "type": "integer"
        }
      }
    },
    "PrintFormReportDataDto": {
      "description": "ДТО для передачи на Джаспер сервер",
      "type": "object",
      "properties": {
        "Extra": {
          "$ref": "#/definitions/PrintFormExtraDataDto",
          "description": "Дополнительная информация"
        },
        "Rpo": {
          "description": "Список РПО",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintFormReportRpoDto"
          }
        },
        "OpsInfo": {
          "$ref": "#/definitions/PrintFormOpsInfoDto",
          "description": "Информация об ОПС"
        },
        "ReceiverFact": {
          "$ref": "#/definitions/PrintFormPersonDto",
          "description": "Фактический получатель"
        },
        "ProcurationNumber": {
          "description": "Номер доверенности (необязательный)",
          "type": "string"
        },
        "ProcurationDate": {
          "format": "date-time",
          "description": "Дата доверенности",
          "type": "string"
        }
      }
    },
    "PrintFormExtraDataDto": {
      "description": "ДТО с дополнительными данными - дополняющими основные",
      "type": "object",
      "properties": {
        "NotificationNumber": {
          "description": "Номер извещения (общий) (заполняем на бэкенде)",
          "type": "string"
        }
      }
    },
    "PrintFormReportRpoDto": {
      "description": "ДТО для передачи на Джаспер сервер",
      "type": "object",
      "properties": {
        "Extra": {
          "$ref": "#/definitions/PrintFormExtraRpoDto",
          "description": "Дополнительная информация"
        },
        "Barcode": {
          "description": "ШПИ",
          "type": "string"
        },
        "IncomingNumber": {
          "description": "Входящий номер РПО",
          "type": "string"
        },
        "RackNumber": {
          "description": "Номер места адресного хранения РПО в ОПС.",
          "type": "string"
        },
        "MailType": {
          "format": "int32",
          "description": "Тип отправления",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            51,
            53,
            54
          ],
          "type": "integer"
        },
        "MailCategory": {
          "format": "int32",
          "description": "Категория отправления",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "MailRank": {
          "format": "int32",
          "description": "Код разрядов почтового отправления",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "HasInventory": {
          "description": "Есть ли опись",
          "type": "boolean"
        },
        "Weight": {
          "format": "int32",
          "description": "Вес в граммах",
          "type": "integer"
        },
        "DeliveryPayment": {
          "format": "int32",
          "description": "Наложенный платеж в копейках",
          "type": "integer"
        },
        "DeclaredValue": {
          "format": "int32",
          "description": "ОЦ в копейках",
          "type": "integer"
        },
        "InsuranceValue": {
          "format": "int32",
          "description": "Сумма страхования в копейках",
          "type": "integer"
        },
        "Tariff": {
          "format": "int32",
          "description": "Тариф за пересылку в копейках",
          "type": "integer"
        },
        "AddServiceTariff": {
          "format": "int32",
          "description": "Тариф за допуслуги (не включая СМС) в копейках",
          "type": "integer"
        },
        "SmsTariff": {
          "format": "int32",
          "description": "Тариф за СМС уведомления в копейках",
          "type": "integer"
        },
        "InsuranceTariff": {
          "format": "int32",
          "description": "Тариф за страхование в копейках",
          "type": "integer"
        },
        "DeclaredValueTariff": {
          "format": "int32",
          "description": "Тариф за ОЦ в копейках",
          "type": "integer"
        },
        "Payment": {
          "format": "int32",
          "description": "Общая плата за пересылку c НДС в копейках",
          "type": "integer"
        },
        "SendDate": {
          "format": "date-time",
          "description": "Дата отправки",
          "type": "string"
        },
        "Sender": {
          "$ref": "#/definitions/PrintFormPersonDto",
          "description": "Отправитель"
        },
        "Receiver": {
          "$ref": "#/definitions/PrintFormPersonDto",
          "description": "Получатель"
        },
        "IsFragile": {
          "description": "Есть отметка \"Осторожно\"",
          "type": "boolean"
        },
        "HasEmailNotification": {
          "description": "Есть ли электронное уведомление отправителя/получателя (не заполняется для фактического получателя)",
          "type": "boolean"
        }
      }
    },
    "PrintFormExtraRpoDto": {
      "description": "ДТО с дополнительными данными - дополняющими основные",
      "type": "object",
      "properties": {
        "DeliveryPaymentString": {
          "description": "НП текстом",
          "type": "string"
        },
        "DeclaredValueString": {
          "description": "ОЦ текстом",
          "type": "string"
        },
        "MailTypeString": {
          "description": "MailType текстом",
          "type": "string"
        },
        "MailCategoryString": {
          "description": "MailCategory текстом",
          "type": "string"
        },
        "MailRankString": {
          "description": "MailRank текстом",
          "type": "string"
        },
        "NotificationNumber": {
          "description": "Номер извещения (заполняем на бэкенде)",
          "type": "string"
        },
        "MailOutNotificationType": {
          "description": "Тип уведомления о вручении текстом",
          "type": "string"
        }
      }
    },
    "RecepientPhoneSearchResultDto": {
      "description": "DTO c результатом поиска номера телефона получателя по ШПИ\r\nRussianPost.ANM.HermesApi.Web.Controllers.v1.RecepientPhoneController",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Номер телефона получателя",
          "type": "string"
        }
      }
    },
    "ReferenceUpdateStatusDto": {
      "description": "Информация о статусе обновления справочника",
      "type": "object",
      "properties": {
        "ReferenceId": {
          "format": "int32",
          "description": "Идентификаторы справочников",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "UpdateTimeStamp": {
          "format": "int64",
          "description": "Дата обновления справочников",
          "type": "integer"
        }
      }
    },
    "ReferenceUpdateDto": {
      "description": "Обновление справочника",
      "type": "object",
      "properties": {
        "Reference": {
          "description": "Значение справочника",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "ReferenceId": {
          "format": "int32",
          "description": "Идентификаторы справочников",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "UpdateTimeStamp": {
          "format": "int64",
          "description": "Дата обновления справочников",
          "type": "integer"
        }
      }
    },
    "Region": {
      "required": [
        "id",
        "cCode",
        "subjectCode"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "cCode": {
          "format": "int64",
          "type": "integer"
        },
        "shortName": {
          "type": "string"
        },
        "subjectCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Macroregion": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RpoFromHistory": {
      "description": "Информация об РПО, получаемая на основании истории",
      "type": "object",
      "properties": {
        "BarCode": {
          "description": "Штрих-код отправления",
          "type": "string"
        },
        "MailType": {
          "$ref": "#/definitions/Rtm0002ReferenceItem",
          "description": "Вид отправления"
        },
        "MailCategory": {
          "$ref": "#/definitions/Rtm0002ReferenceItem",
          "description": "Категория почтового отправления"
        },
        "MailRank": {
          "$ref": "#/definitions/Rtm0002ReferenceItem",
          "description": "Разряд почтового отправления"
        },
        "SenderCategory": {
          "$ref": "#/definitions/Rtm0002ReferenceItem",
          "description": "Категория отправителя"
        },
        "PostMarks": {
          "description": "Отметки",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rtm0002ReferenceItem"
          }
        },
        "SenderName": {
          "description": "Наименование отправителя",
          "type": "string"
        },
        "ReceiverName": {
          "description": "Наименование получателя",
          "type": "string"
        },
        "ReceiverNameHighlighted": {
          "description": "Имя получателя с выделенным найденным текстом",
          "type": "string"
        },
        "SenderAddress": {
          "description": "Адрес отправителя",
          "type": "string"
        },
        "ReceiverAddress": {
          "description": "Адрес получателя",
          "type": "string"
        },
        "ReceiverAddressHighlighted": {
          "description": "Адрес получателя с выделенным найденным текстом",
          "type": "string"
        },
        "IsCanReceipt": {
          "description": "Возможность выдачи",
          "type": "boolean"
        },
        "NoReceiptReason": {
          "format": "int32",
          "description": "Код причины, по которой нельзя выдать",
          "enum": [
            0,
            1,
            2,
            98,
            99,
            100,
            101,
            200,
            201,
            202,
            203,
            204
          ],
          "type": "integer"
        },
        "DateIssued": {
          "format": "date-time",
          "description": "Дата выдачи РПО",
          "type": "string"
        },
        "Issued": {
          "description": "Отправление выдано",
          "type": "boolean"
        },
        "CurrentStatusName": {
          "description": "Текущий статус",
          "type": "string"
        },
        "OperTypeName": {
          "description": "Наименование операции",
          "type": "string"
        },
        "OperAttrName": {
          "description": "Наименование атрибута операции",
          "type": "string"
        },
        "OperOpsIndex": {
          "description": "Индекс ОПС операции",
          "type": "string"
        },
        "OperOpsDesc": {
          "description": "Описание ОПС операции",
          "type": "string"
        },
        "ToPay": {
          "format": "double",
          "description": "Сумма к оплате",
          "type": "number"
        },
        "LastOperationOpsIndex": {
          "description": "Индекс отделения, где проводилась последняя операция",
          "type": "string"
        },
        "RackNumber": {
          "description": "Номер места адресного хранения РПО в ОПС.",
          "type": "string"
        },
        "DocumentNumber": {
          "description": "Номер документа",
          "type": "string"
        },
        "DocumentType": {
          "$ref": "#/definitions/Rtm0030ReferenceItem",
          "description": "Код вида документа (атрибута Type элемента Document) в соответствии с РТМ 0030.06-14"
        },
        "ReceiverMobilePhone": {
          "description": "Номер мобильного телефона получателя",
          "type": "string"
        },
        "IndexFrom": {
          "description": "Индекс ОПС, откуда поступило внутреннее или экспортное международное отправление EMS.",
          "type": "string"
        },
        "IndexTo": {
          "description": "Почтовый индекс ОПС адресата (в соответствии с действующей системой индексации ОПС).",
          "type": "string"
        },
        "MailDirect": {
          "$ref": "#/definitions/Rtm0002ReferenceItem",
          "description": "Код страны места назначения почтового отправления.Для внутренних почтовых отправлений элемент принимает значение 643 (Россия) в соответствии с РТМ 0002 [2]."
        },
        "Payment": {
          "format": "int64",
          "description": "Сумма наложенного платежа в копейках.\r\nДля исходящих международных почтовых отправлений сумма наложенного платежа указывается в денежных единицах страны назначения почтового отправления.",
          "type": "integer"
        },
        "ReceiverLastNameNormalized": {
          "description": "Нормализованная фамилия получателя",
          "type": "string"
        },
        "Value": {
          "format": "int64",
          "description": "Сумма объявленной ценности в копейках. Для международных почтовых отправлений сумма объявленной ценности указывается в СПЗ.",
          "type": "integer"
        },
        "Mass": {
          "format": "int32",
          "description": "Вес отправления в граммах",
          "type": "integer"
        },
        "VolumeWeight": {
          "format": "int32",
          "description": "Объемный вес отправления в граммах",
          "type": "integer"
        },
        "Direction": {
          "format": "int32",
          "description": "Направление доставки",
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "WithCod": {
          "description": "Флаг, показывающий, есть ли наложенный платеж",
          "type": "boolean"
        },
        "IsSenderCompany": {
          "description": "Флаг, показывающий, является ли отправитель юрлицом",
          "type": "boolean"
        },
        "IsReceiverCompany": {
          "description": "Флаг, показывающий, является ли получатель юрлицом",
          "type": "boolean"
        },
        "SendingDate": {
          "format": "date-time",
          "description": "Дата отправления",
          "type": "string"
        },
        "OperationDate": {
          "format": "date-time",
          "description": "Дата и время проведения операции",
          "type": "string"
        },
        "IncomingNumber": {
          "description": "Входящий номер РПО",
          "type": "string"
        },
        "HasDefect": {
          "description": "Флаг - есть ли дефект",
          "type": "boolean"
        },
        "CustomStatus": {
          "format": "int32",
          "description": "Статус - необходима оплата таможенного платежа",
          "type": "integer"
        },
        "CustomDuty": {
          "format": "int32",
          "description": "Сумма таможенного платежа в копейках.",
          "type": "integer"
        },
        "WithCodNg": {
          "description": "Флаг - необходима оплата наложенного платежа version 2",
          "type": "boolean"
        },
        "CodNg": {
          "format": "int32",
          "description": "Сумма наложенного платежа в копейках version 2.",
          "type": "integer"
        },
        "Payments": {
          "description": "Список необходимых платежей (если требуются)",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RpoPayment"
          }
        },
        "SenderPhone": {
          "description": "Номер телефона отправителя",
          "type": "string"
        },
        "ReceiverPhone": {
          "description": "Номер телефона получателя",
          "type": "string"
        },
        "Ecom": {
          "$ref": "#/definitions/EcomDto",
          "description": "Данные о ecom"
        },
        "ServiceType": {
          "format": "int64",
          "description": "Код вида сервиса, используемого для отправлений",
          "type": "integer"
        }
      }
    },
    "Rtm0002ReferenceItem": {
      "type": "object",
      "properties": {
        "Code": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "Rtm0030ReferenceItem": {
      "type": "object",
      "properties": {
        "Code": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "RpoPayment": {
      "description": "Платеж по РПО",
      "type": "object",
      "properties": {
        "Type": {
          "format": "int32",
          "description": "Тип платежа",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Value": {
          "$ref": "#/definitions/PaymentItemInfo",
          "description": "Общая сумма платежа без комиссии"
        },
        "Commission": {
          "$ref": "#/definitions/PaymentItemInfo",
          "description": "Комиссия"
        },
        "TransferCodNumber": {
          "format": "int32",
          "description": "Номер принятого НП - при наличии",
          "type": "integer"
        }
      }
    },
    "EcomDto": {
      "description": "Данные о ecom",
      "type": "object",
      "properties": {
        "WithPayment": {
          "description": "Нужна ли оплата",
          "type": "boolean"
        },
        "Total": {
          "format": "int32",
          "description": "Сколько нужно заплатить за ecom",
          "type": "integer"
        },
        "Data": {
          "$ref": "#/definitions/EcomData",
          "description": "Информация о ecom"
        }
      }
    },
    "PaymentItemInfo": {
      "description": "Информация о элементе платежа (любого элемента платежа без привязки к чему либо)\r\nПодразаумевается, что есть некая единица, которую необходимо оплатить и \r\nу нее может быть или не быть налого.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование платежа",
          "type": "string"
        },
        "VatType": {
          "format": "int32",
          "description": "Тип НДС",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ValueWithVat": {
          "format": "int32",
          "description": "Значение, включая НДС",
          "type": "integer"
        },
        "Vat": {
          "format": "int32",
          "description": "Значение НДС",
          "type": "integer"
        }
      }
    },
    "EcomData": {
      "description": "Данные для фискализации от ЮТ",
      "required": [
        "Customer",
        "Lines",
        "Payments"
      ],
      "type": "object",
      "properties": {
        "Barcode": {
          "description": "Баркод ЕКОМ",
          "type": "string"
        },
        "Eorder": {
          "description": "Номер заказа",
          "type": "string"
        },
        "Customer": {
          "$ref": "#/definitions/Customer",
          "description": "Данные плательщика"
        },
        "Lines": {
          "description": "Товарные позиции в чеке",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Line"
          }
        },
        "Payments": {
          "description": "Средства, использованные при оплате",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "Total": {
          "format": "int64",
          "description": "Итоговая сумма чека (копейки)",
          "type": "integer"
        }
      }
    },
    "Customer": {
      "required": [
        "phone",
        "customerName",
        "customerInn"
      ],
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 64,
          "type": "string"
        },
        "phone": {
          "maxLength": 19,
          "type": "string"
        },
        "email": {
          "maxLength": 64,
          "type": "string"
        },
        "customerName": {
          "maxLength": 1000,
          "type": "string"
        },
        "customerInn": {
          "maxLength": 14,
          "type": "string"
        }
      }
    },
    "Line": {
      "required": [
        "name",
        "price",
        "quantity",
        "sum",
        "vat"
      ],
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 32,
          "type": "string"
        },
        "name": {
          "maxLength": 1000,
          "type": "string"
        },
        "price": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "sum": {
          "format": "int64",
          "type": "integer"
        },
        "vat": {
          "format": "int32",
          "type": "integer"
        },
        "payattr": {
          "format": "int32",
          "type": "integer"
        },
        "lineattr": {
          "format": "int32",
          "type": "integer"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "agent": {
          "$ref": "#/definitions/Agent"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 36,
          "type": "string"
        },
        "kind": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "code": {
          "maxLength": 32,
          "type": "string"
        },
        "excise": {
          "format": "int32",
          "type": "integer"
        },
        "country": {
          "format": "int32",
          "type": "integer"
        },
        "declaration": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Agent": {
      "type": "object",
      "properties": {
        "attr": {
          "format": "int32",
          "type": "integer"
        },
        "phone": {
          "maxLength": 19,
          "type": "string"
        },
        "accopphone": {
          "maxLength": 19,
          "type": "string"
        },
        "operphone": {
          "maxLength": 19,
          "type": "string"
        },
        "opername": {
          "maxLength": 1000,
          "type": "string"
        },
        "operinn": {
          "maxLength": 14,
          "type": "string"
        },
        "operaddress": {
          "maxLength": 1000,
          "type": "string"
        },
        "operation": {
          "maxLength": 1000,
          "type": "string"
        },
        "suppliername": {
          "maxLength": 1000,
          "type": "string"
        },
        "supplierinn": {
          "maxLength": 14,
          "type": "string"
        },
        "supplierphone": {
          "maxLength": 19,
          "type": "string"
        }
      }
    },
    "SimpleCodInputDto": {
      "description": "Входные данные для создания заказа на выдачу РПО с COD без UI",
      "required": [
        "trackingNumber",
        "operatorId",
        "token",
        "fio",
        "terminalId"
      ],
      "type": "object",
      "properties": {
        "trackingNumber": {
          "description": "ШПИ отправления",
          "type": "string"
        },
        "operatorId": {
          "description": "Идентификатор оператора ЕАС",
          "type": "string"
        },
        "token": {
          "description": "Токен авторизации",
          "type": "string"
        },
        "fio": {
          "description": "ФИО оператора",
          "type": "string"
        },
        "terminalId": {
          "description": "Номер рабочего места",
          "type": "string"
        }
      }
    },
    "SimpleCodOutputDto": {
      "description": "Выходные данные создания заказа на выдачу РПО с COD без UI",
      "type": "object",
      "properties": {
        "orderId": {
          "format": "int64",
          "description": "Идентификатор заказа",
          "type": "integer"
        },
        "paymentId": {
          "format": "int64",
          "description": "Идентификатор платежа",
          "type": "integer"
        },
        "commodities": {
          "description": "Список товарных вложений",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommodityDto"
          }
        }
      }
    },
    "CommodityDto": {
      "description": "Товарное вложение для передачи в ЕАС",
      "type": "object",
      "properties": {
        "name": {
          "description": "Наименование предмета расчета",
          "type": "string"
        },
        "barcode": {
          "description": "Штриховой код EAN13",
          "type": "string"
        },
        "price": {
          "format": "int32",
          "description": "Цена за единицу с учетом скидок и наценок",
          "type": "integer"
        },
        "quantity": {
          "format": "double",
          "description": "Количество предмета расчета",
          "type": "number"
        },
        "vat": {
          "format": "int32",
          "description": "Ставка НДС",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "priceDirection": {
          "description": "Направление движения денег\r\nTrue – поступление False - расход",
          "type": "boolean"
        },
        "agentType": {
          "format": "int32",
          "description": "Тип агента",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            32,
            64
          ],
          "type": "integer"
        },
        "transOpPhoneNum": {
          "description": "Телефон оператора перевода",
          "type": "string"
        },
        "payAgentOperation": {
          "description": "Операция платежного агента",
          "type": "string"
        },
        "bankAgentPhoneNum": {
          "description": "Телефон платежного агента",
          "type": "string"
        },
        "payOpPhoneNum": {
          "description": "Телефон оператора по приему платежей",
          "type": "string"
        },
        "transOpName": {
          "description": "Наименование оператора перевода",
          "type": "string"
        },
        "transOpAddress": {
          "description": "Адрес оператора перевода",
          "type": "string"
        },
        "transOpInn": {
          "description": "ИНН оператора перевода",
          "type": "string"
        },
        "vendorPhoneNum": {
          "description": "Телефон поставщика",
          "type": "string"
        },
        "vendorName": {
          "description": "Наименование поставщика",
          "type": "string"
        },
        "paymentSubjectType": {
          "format": "int32",
          "description": "Признак предмета расчета",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13
          ],
          "type": "integer"
        },
        "paymentMethodType": {
          "format": "int32",
          "description": "Признак способа расчета",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "vendorInn": {
          "description": "ИНН поставщика",
          "type": "string"
        },
        "commodityNomenclatureCode": {
          "format": "byte",
          "description": "Код товарной номенклатуры",
          "type": "string"
        }
      }
    },
    "TrackingHistoryDto": {
      "description": "История событий трекинга",
      "type": "object",
      "properties": {
        "items": {
          "description": "Элементы истории",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingHistoryItemDto"
          }
        }
      }
    },
    "TrackingHistoryItemDto": {
      "description": "Элемент истории событий трекинга",
      "type": "object",
      "properties": {
        "barcode": {
          "description": "Штрих-код отправления",
          "type": "string"
        },
        "operTypeName": {
          "description": "Наименование операции",
          "type": "string"
        },
        "operAttrName": {
          "description": "Наименование атрибута операции",
          "type": "string"
        },
        "operOpsIndex": {
          "description": "Индекс ОПС операции",
          "type": "string"
        },
        "operOpsDesc": {
          "description": "Описание ОПС операции",
          "type": "string"
        },
        "mass": {
          "format": "int64",
          "description": "Вес отправления в граммах",
          "type": "integer"
        },
        "operationDate": {
          "format": "date-time",
          "description": "Дата и время проведения операции",
          "type": "string"
        }
      }
    }
  }
}
